sample.df <- read_csv('../../../train_df.csv')
test.df <- read_csv('../../../test_df.csv')
str(test.df)
sample.df <- sample.df %>%
mutate_at(vars(factor.vars),factor)
test.df <- test.df %>%
mutate_at(vars(factor.vars),factor)
outcome.name <- 'final_outcome_death'
n <- nrow(df); df <- na.omit(df); y.idx <- grep(outcome.name, colnames(df))
#get x and y dataframes
df.x <- df[,-y.idx]; df.y <- as.factor(df[,y.idx])
#Script to test ROC value obtained from data
#load packages
library(tidyverse)
library(glmnet)
library(tableone)
library(caret)
library(ROCR)
library(parallel)
library(broom)
library(tictoc)
library(lme4)
library(lmerTest)
sample.df <- read_csv('../../../train_df.csv')
test.df <- read_csv('../../../test_df.csv')
factor.vars <- c("sex","Abnormal_BCS","hivFinal","bednet","final_outcome_death", "boiling", "hivMaternal", "malaria", "sibling_deaths")
sample.df <- sample.df %>%
mutate_at(vars(factor.vars),factor)
test.df <- test.df %>%
mutate_at(vars(factor.vars),factor)
outcome.name <- 'final_outcome_death'
n <- nrow(df); df <- na.omit(df); y.idx <- grep(outcome.name, colnames(df))
#get x and y dataframes
df.x <- df[,-y.idx]; df.y <- as.factor(df[,y.idx])
#fit rf
rfFuncs$summary <- twoClassSummary;
ctrl <- rfeControl(functions=rfFuncs, method = 'cv', repeats = 5,verbose = F,
allowParallel = T,saveDetails = T)
df <- sample.df
outcome.name <- 'final_outcome_death'
n <- nrow(df); df <- na.omit(df); y.idx <- grep(outcome.name, colnames(df))
#get x and y dataframes
df.x <- df[,-y.idx]; df.y <- as.factor(df[,y.idx])
y.idx
#get x and y dataframes
df.x <- df[,-y.idx]; df.y <- as.factor(df[,y.idx])
df
df[,-y.idx]
df[,y.idx]
#get x and y dataframes
df.x <- df[,-y.idx]; df.y <- (df[,y.idx])
df.y
#fit rf
rfFuncs$summary <- twoClassSummary;
ctrl <- rfeControl(functions=rfFuncs, method = 'cv', repeats = 5,verbose = F,
allowParallel = T,saveDetails = T)
subsets <- seq(1,25,3)
rf <- rfe(x=df.x,y=df.y,data = df,sizes = subsets, metric = "ROC", rfeControl = ctrl)
sample.df <- read.csv('../../../train_df.csv')
test.df <- read.csv('../../../test_df.csv')
factor.vars <- c("sex","Abnormal_BCS","hivFinal","bednet","final_outcome_death", "boiling", "hivMaternal", "malaria", "sibling_deaths")
sample.df <- sample.df %>%
mutate_at(vars(factor.vars),factor)
test.df <- test.df %>%
mutate_at(vars(factor.vars),factor)
df <- sample.df
outcome.name <- 'final_outcome_death'
#get x and y dataframes
df.x <- df[,-y.idx]; df.y <- as.factor(df[,y.idx])
#fit rf
rfFuncs$summary <- twoClassSummary;
ctrl <- rfeControl(functions=rfFuncs, method = 'cv', repeats = 5,verbose = F,
allowParallel = T,saveDetails = T)
subsets <- seq(1,25,3)
rf <- rfe(x=df.x,y=df.y,data = df,sizes = subsets, metric = "ROC", rfeControl = ctrl)
who_family_history <- fix_multiple_levels(df,"who_family_history", extra_val = "who_suspected_other_1")
rf
#get roc value
idx <- rf$results$Variables == rf$optsize
roc.val.caret <- rf$results[idx,2]
#get roc from test set
roc.val.pROC <- pROC::roc(test.df$final_outcome_death, predict(rf, test.df, 'prob')$X1)
roc.val.caret;roc.val.pROC
?pROC::roc
#get roc from test set
roc.val.pROC <- pROC::roc(test.df$final_outcome_death, predict(rf, test.df, 'prob')$X1, ci = T)
roc.val.pROC
